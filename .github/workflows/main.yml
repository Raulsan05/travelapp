name: Kotlin Multiplatform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'   # Specify the JDK version here
          distribution: 'zulu' # You can also use 'adoptopenjdk' or 'temurin' if needed

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build Android
        run: ./gradlew assembleRelease --info   # Added --info for detailed logs

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v3
        with:
          name: android-release-apk
          path: app/build/outputs/apk/release/*.apk

  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Install Xcode Command Line Tools
        run: |
          if ! xcode-select --print-path > /dev/null 2>&1; then
            echo "Xcode Command Line Tools are not installed. Installing..."
            xcode-select --install || echo "Failed to install Xcode Command Line Tools"
          else
            echo "Xcode Command Line Tools are already installed"
          fi

      - name: Build iOS
        run: ./gradlew iosArm64MainFramework

      - name: Upload iOS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ios-framework
          path: build/bin/ios/arm64/debugFramework/*.framework

  build-desktop:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build Desktop
        run: ./gradlew desktopJar

      - name: Upload Desktop artifacts
        uses: actions/upload-artifact@v3
        with:
          name: desktop-jar
          path: build/libs/*.jar

  generate-artifact-links:
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-desktop]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List artifacts
        run: |
          echo "Artifact URLs for download:"
          echo "Android APK: ${{ steps.upload-android-artifacts.outputs.artifact-url }}"
          echo "iOS Framework: ${{ steps.upload-ios-artifacts.outputs.artifact-url }}"
          echo "Desktop JAR: ${{ steps.upload-desktop-artifacts.outputs.artifact-url }}"
